plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'kotlinx-serialization'
    id 'com.github.triplet.play' version '2.0.0'
    id 'com.github.ben-manes.versions'
    id 'io.fabric'
}

apply plugin: 'androidx.navigation.safeargs'

def keystoreProperties = new Properties()
try {
    keystoreProperties.load(new FileInputStream(file("../keystore.properties")))
} catch (Exception ignore) {
}

android {
    compileSdkVersion buildVersions.targetSdk

    defaultConfig {
        applicationId "com.satis.app"
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "UNSPLASH_CLIENT_ID", '"' + keystoreProperties['unsplashClientId'] + '"'
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'] ?: "dummy")
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            buildConfigField "Long", "BUILD_TIME", "0L"
        }
        release {
            buildConfigField "Long", "BUILD_TIME", System.currentTimeMillis().toString() + "L"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

play {
    defaultToAppBundles = true
    serviceAccountCredentials = file("../service-account.json")
    track = 'internal'
    resolutionStrategy = 'auto'
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX
    implementation deps.androidx.appCompat
    implementation deps.androidx.cardView
    implementation deps.androidx.constraintLayout
    implementation deps.androidx.coreKtx
    implementation(deps.androidx.futures) {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation deps.androidx.lifecycle.extensions
    implementation deps.androidx.lifecycle.runtime
    implementation deps.androidx.navigation.fragmentKtx
    implementation deps.androidx.navigation.uiKtx
    implementation deps.androidx.recyclerView
    implementation deps.androidx.room.runtime
    implementation deps.androidx.room.rxJava2
    kapt deps.androidx.lifecycle.compiler
    kapt deps.androidx.room.compiler

    // Crashlytics
    implementation deps.crashlytics

    // Firebase
    implementation deps.firebase.core
    implementation deps.firebase.firestore

    // Glide
    implementation deps.glide.glide
    implementation deps.glide.recyclerview
    kapt deps.glide.compiler

    // Koin
    implementation deps.koin.android
    implementation deps.koin.androidViewmodel

    // Kotlin
    implementation deps.kotlin.serialization.runtime
    implementation deps.kotlin.serialization.runtimeCommon
    implementation deps.kotlin.stdlib

    // Kotlin Coroutines
    implementation deps.kotlin.coroutines.android
    implementation deps.kotlin.coroutines.common
    implementation deps.kotlin.coroutines.rx2

    // Material Design
    implementation deps.material

    // MvRx
    implementation deps.mvrx

    // OkHttp
    implementation deps.okhttp.okhttp

    // PeekAndPop
    implementation deps.peekAndPop

    // Retrofit
    implementation deps.retrofit.retrofit
    implementation deps.retrofit.kotlinCoroutinesAdapter
    implementation deps.retrofit.kotlinSerialization

    // RxJava
    implementation deps.rxAndroid
    implementation deps.rxJava2

    // Tiny Dancer
    implementation deps.tinydancer

    // Work Manager
    implementation(deps.workManager.runtime) {
        // TODO remove after work manager alpha
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    // Unit Testing
    testImplementation deps.junit

    // Android Testing
    androidTestImplementation deps.androidx.test.runner
    androidTestImplementation deps.androidx.test.rules
    androidTestImplementation deps.androidx.coreTesting
    androidTestImplementation deps.androidx.espresso.core
    androidTestImplementation deps.androidx.espresso.contrib
    androidTestImplementation deps.androidx.espresso.intents
}

apply plugin: 'com.google.gms.google-services'